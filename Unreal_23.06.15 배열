- 배열
배열의 특성
같은 종류 데이터를 그룹으로 관리
고정된 사이즈에 초과된 데이터 입력이 어렵다
크기변경은 어렵다.
순서 개념을 가지고 있다. index
배열이름 =  주소상수
배열이름 - 주소 상수 (상수이기에 주소 데이터를 바꿀수 없다)

- List의 필요성
총알을 보인다 안보인다 개념
만발의 총알중에서 9999번의 index를 가진 총알을 선별할때 필요한 자료구조

탄창에 보관되어있는 안보이는 총알을 선별하여 다른 배열에 담아놓는데
이는 메모리 낭비가 발생할수있다 이를 방지해주는것이 List  배열 

> 해결법 : List
Linked List 구조 =  Data- 주소(다음 데이터의 주소값을 가지고있다)
데이터의 추가 삭제 확장에 배열보다 장점이 있다 (효과적인 알고리즘 구조 구성)

- TArray
언리얼에서 배열과 List의 장점을 합쳐놓은 자료구조
언리얼에서는 배열개념을 List로 합쳐놨는데 그것이 TArray로 통합해서 쓴다
T = template

- TArray의 함수들
number.Add(10) : 10을 배열에 넣는다
number.Num() : 배열의 크기를 얻어온다
number[10] : 10번째 idx의 값을 얻어온다
number.RemoveAt(0) : 0번째 요소를 삭제한다

- 포인터 타입 배열 만들기
int32 data = *numbers[0];
원본에 접근하여 값을 변경할때에는 
앞에 * 포인터를 붙여서 주소로 접근한다.














